import java.util.ArrayList;

public class List {
	public static void main(String[] args) {
		// 제일 많이 사용하는 ArrayList 가 있다
		// 값을 순서대로 저장하고 필요할때마다 값을 추가하거나 삭제할 수 있다
		// String 부분엔 다른 자료형도 들어갈수가 있는데
		// 정수 : integer
		// 실수 : double
		// 문자열 : String
		// 클래스 : Person
		// 참 거짓 : Boolean
		// char : character
		ArrayList<String> human = new ArrayList<>();
		// 이렇게 추가할수도 있다
		human.add("사람");
		human.add("나다");
		human.add("생존자");

		// 목록에서 remove를 쓰면 제거가 된다.
		// 1. 인덱스로 제거하는 방법
		human.remove(1);
		// 1번째인 '나다'가 지워지게 된다
		// 이후 출력을 하게되면 "사람"/"생존자"가 출력된다
		System.out.println(human);
		// 2. 객체로 제거하는 방법
		human.remove("사람");
		// 이후 출력하면 "사람"과 "나다"가 지워져 생존자만 남게된다
		System.out.println(human);
		// 3. 숫자 값을 제거하는 방법
		// 다만 숫자와 인덱스가 같이 공존할때에는 두개가 혼동되지않도록 integer.valueOf()를 사용한다.
		ArrayList<Integer> num = new ArrayList<>();
		num.add(50);
		num.add(3);
		num.remove(Integer.valueOf(3));
		System.out.println(num);

		// 목록에서 set 을 사용하면 수정할수있다.
		ArrayList<String> words = new ArrayList<>();
		words.add("가방");
		words.add("책상");
		words.add("책");
		System.out.println(words);
		// 수정할땐 (인덱스값 / 변경내용)
		words.set(0, "오렌지");
		System.out.println(words);
		// size()를 사용하면 리스트안의 값의 개수를 확인합니다.
		System.out.println(words.size());
		// 모든값을 수정하려면 for문을 사용합니다.
		// 배열에서 조회를 하고싶을때는 get(인덱스)을 사용합니다.
		for (int i = 0; i < words.size(); i++) {
			words.set(i, words.get(i) + "추가됨");
		}
		System.out.println(words);
		
		//그렇다면 List와 ArrayList는 어떻게 다른가?
		// List는 인터페이스이고 ArrayList는 실제적인 데이터구조
		// 따라서 List는 직접적으로 사용은 불가능하고 ArrayList나 다른것을 함께 사용해야합니다.
		
	}
}
